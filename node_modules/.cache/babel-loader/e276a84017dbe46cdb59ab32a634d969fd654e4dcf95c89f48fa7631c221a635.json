{"ast":null,"code":"import React from'react';// Import React\nimport ReactDOM from'react-dom';// Import ReactDOM\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Board=()=>{// 1st player is X ie 1\n// State keeps track of next player and gameState\nconst[player,setPlayer]=React.useState(1);const[gameState,setGameState]=React.useState([]);let status=\"Winner is \".concat(checkForWinner(gameState));// Part 1 step 1 code goes here\n// Use conditional logic to set a variable to either 'Player O' or  'Player X'\nlet playerTurn=\"Next Player: \".concat(player==='0'?'Player O':'Player X');console.log(\"We hav a winner \".concat(status));const takeTurn=id=>{setGameState([...gameState,{id:id,player:player}]);setPlayer((player+1)%2);// get next player\nreturn player;};function renderSquare(i){// use properties to pass callback function takeTurn to Child\nreturn/*#__PURE__*/_jsx(Square,{takeTurn:takeTurn,id:i});}return/*#__PURE__*/_jsxs(\"div\",{className:\"game-board\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"grid-row\",children:[renderSquare(0),renderSquare(1),renderSquare(2)]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid-row\",children:[renderSquare(3),renderSquare(4),renderSquare(5)]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid-row\",children:[renderSquare(6),renderSquare(7),renderSquare(8)]}),/*#__PURE__*/_jsxs(\"div\",{id:\"info\",children:[/*#__PURE__*/_jsx(\"h1\",{id:\"turn\",children:playerTurn}),/*#__PURE__*/_jsx(\"h1\",{children:status})]})]});};const Square=_ref=>{let{takeTurn,id}=_ref;const mark=['O','X','+'];const[tik,setTik]=React.useState(2);return/*#__PURE__*/_jsx(\"button\",{className:tik==='1'?'red':'white',onClick:()=>{setTik(takeTurn(id));console.log(\"Square: \".concat(id,\" filled by player : \").concat(tik));},children:/*#__PURE__*/_jsx(\"h1\",{children:mark[tik]})});};const Game=()=>{return/*#__PURE__*/_jsx(\"div\",{className:\"game\",children:/*#__PURE__*/_jsx(Board,{})});};// Checking for Winner takes a bit of work\n// Use JavaScript Sets to check players choices\n// against winning combinations\n// Online there is more compact version but I prefer this one\nconst win=[// rows\n[0,1,2],[3,4,5],[6,7,8],// cols\n[0,3,6],[1,4,7],[2,5,8],// diagonal\n[0,4,8],[2,4,6]];const checkForWinner=gameState=>{// get array of box id's\n// can't be a winner in less than 5 turns\nif(gameState.length<5)return'No Winner Yet';let p0=gameState.filter(item=>{if(item.player===0)return item;});p0=p0.map(item=>item.id);let px=gameState.filter(item=>{if(item.player==1)return item;});px=px.map(item=>item.id);if(p0!==null&&px!==null){var win0=win.filter(item=>{return isSuperset(new Set(p0),new Set(item));});var winX=win.filter(item=>{return isSuperset(new Set(px),new Set(item));});}if(win0.length>0)return'Player O ';else if(winX.length>0)return'Player X ';return'No Winner Yet';};// check if subset is in the set\nfunction isSuperset(set,subset){for(let elem of subset){if(!set.has(elem)){return false;}}return true;}// Export the Game component as default\nexport default Game;// ========================================\nReactDOM.render(/*#__PURE__*/_jsx(Game,{}),document.getElementById('root'));","map":{"version":3,"names":["React","ReactDOM","jsx","_jsx","jsxs","_jsxs","Board","player","setPlayer","useState","gameState","setGameState","status","concat","checkForWinner","playerTurn","console","log","takeTurn","id","renderSquare","i","Square","className","children","_ref","mark","tik","setTik","onClick","Game","win","length","p0","filter","item","map","px","win0","isSuperset","Set","winX","set","subset","elem","has","render","document","getElementById"],"sources":["/Users/marialee/Desktop/tictactoe/src/tictactoe.jsx"],"sourcesContent":["import React from 'react'; // Import React\nimport ReactDOM from 'react-dom'; // Import ReactDOM\n\nconst Board = () => {\n  // 1st player is X ie 1\n  // State keeps track of next player and gameState\n  const [player, setPlayer] = React.useState(1);\n  const [gameState, setGameState] = React.useState([]);\n  let status = `Winner is ${checkForWinner(gameState)}`;\n\n  // Part 1 step 1 code goes here\n  // Use conditional logic to set a variable to either 'Player O' or  'Player X'\n  let playerTurn = `Next Player: ${player === '0' ? 'Player O' : 'Player X'}`;\n\n  console.log(`We hav a winner ${status}`);\n\n  const takeTurn = (id) => {\n    setGameState([...gameState, { id: id, player: player }]);\n    setPlayer((player + 1) % 2); // get next player\n    return player;\n  };\n  function renderSquare(i) {\n    // use properties to pass callback function takeTurn to Child\n    return <Square takeTurn={takeTurn} id={i}></Square>;\n  }\n\n  return (\n    <div className=\"game-board\">\n      <div className=\"grid-row\">\n        {renderSquare(0)}\n        {renderSquare(1)}\n        {renderSquare(2)}\n      </div>\n      <div className=\"grid-row\">\n        {renderSquare(3)}\n        {renderSquare(4)}\n        {renderSquare(5)}\n      </div>\n      <div className=\"grid-row\">\n        {renderSquare(6)}\n        {renderSquare(7)}\n        {renderSquare(8)}\n      </div>\n      <div id=\"info\">\n        <h1 id=\"turn\">{playerTurn}</h1>\n        <h1>{status}</h1>\n      </div>\n    </div>\n  );\n};\n\nconst Square = ({ takeTurn, id }) => {\n  const mark = ['O', 'X', '+'];\n  const [tik, setTik] = React.useState(2);\n\n  return (\n    <button\n      className={tik === '1' ? 'red' : 'white'}\n      onClick={() => {\n        setTik(takeTurn(id));\n        console.log(`Square: ${id} filled by player : ${tik}`);\n      }}\n    >\n      <h1>{mark[tik]}</h1>\n    </button>\n  );\n};\n\nconst Game = () => {\n  return (\n    <div className=\"game\">\n      <Board></Board>\n    </div>\n  );\n};\n\n\n\n// Checking for Winner takes a bit of work\n// Use JavaScript Sets to check players choices\n// against winning combinations\n// Online there is more compact version but I prefer this one\n\nconst win = [\n  // rows\n  [0, 1, 2],\n  [3, 4, 5],\n  [6, 7, 8],\n  // cols\n  [0, 3, 6],\n  [1, 4, 7],\n  [2, 5, 8],\n  // diagonal\n  [0, 4, 8],\n  [2, 4, 6],\n];\n\n\n\nconst checkForWinner = (gameState) => {\n  // get array of box id's\n  // can't be a winner in less than 5 turns\n  if (gameState.length < 5) return 'No Winner Yet';\n  let p0 = gameState.filter((item) => {\n    if (item.player === 0) return item;\n  });\n  p0 = p0.map((item) => item.id);\n  let px = gameState.filter((item) => {\n    if (item.player == 1) return item;\n  });\n  px = px.map((item) => item.id);\n  if (p0 !== null && px !== null) {\n    var win0 = win.filter((item) => {\n      return isSuperset(new Set(p0), new Set(item));\n    });\n    var winX = win.filter((item) => {\n      return isSuperset(new Set(px), new Set(item));\n    });\n  }\n  if (win0.length > 0) return 'Player O ';\n  else if (winX.length > 0) return 'Player X ';\n  return 'No Winner Yet';\n};\n// check if subset is in the set\nfunction isSuperset(set, subset) {\n  for (let elem of subset) {\n    if (!set.has(elem)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n\n\n// Export the Game component as default\nexport default Game;\n\n\n\n// ========================================\n\nReactDOM.render(<Game />, document.getElementById('root'));\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}