{"ast":null,"code":"var _jsxFileName = \"/Users/marialee/Desktop/tictactoe/src/tictactoe.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React from 'react'; // Import React\nimport ReactDOM from 'react-dom'; // Import ReactDOM\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Board = () => {\n  _s();\n  // 1st player is X ie 1\n  // State keeps track of next player and gameState\n  const [player, setPlayer] = React.useState(1);\n  const [gameState, setGameState] = React.useState([]);\n  let status = `Winner is ${checkForWinner(gameState)}`;\n\n  // Part 1 step 1 code goes here\n  // Use conditional logic to set a variable to either 'Player O' or  'Player X'\n  let playerTurn = `Next Player: ${player === '0' ? 'Player O' : 'Player X'}`;\n  console.log(`We hav a winner ${status}`);\n  const takeTurn = id => {\n    setGameState([...gameState, {\n      id: id,\n      player: player\n    }]);\n    setPlayer((player + 1) % 2); // get next player\n    return player;\n  };\n  function renderSquare(i) {\n    // use properties to pass callback function takeTurn to Child\n    return /*#__PURE__*/_jsxDEV(Square, {\n      takeTurn: takeTurn,\n      id: i\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-board\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-row\",\n      children: [renderSquare(0), renderSquare(1), renderSquare(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-row\",\n      children: [renderSquare(3), renderSquare(4), renderSquare(5)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-row\",\n      children: [renderSquare(6), renderSquare(7), renderSquare(8)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"turn\",\n        children: playerTurn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(Board, \"77ICKdmhyAuet5nmmQsSyJWkk4g=\");\n_c = Board;\nconst Square = ({\n  takeTurn,\n  id\n}) => {\n  _s2();\n  const mark = ['O', 'X', '+'];\n  const [tik, setTik] = React.useState(2);\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: tik === '1' ? 'red' : 'white',\n    onClick: () => {\n      setTik(takeTurn(id));\n      console.log(`Square: ${id} filled by player : ${tik}`);\n    },\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: mark[tik]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s2(Square, \"ttemG08NIm+3SvP5SoTSrQzEKZ8=\");\n_c2 = Square;\nconst Game = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: /*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n// Checking for Winner takes a bit of work\n// Use JavaScript Sets to check players choices\n// against winning combinations\n// Online there is more compact version but I prefer this one\n_c3 = Game;\nconst win = [\n// rows\n[0, 1, 2], [3, 4, 5], [6, 7, 8],\n// cols\n[0, 3, 6], [1, 4, 7], [2, 5, 8],\n// diagonal\n[0, 4, 8], [2, 4, 6]];\nconst checkForWinner = gameState => {\n  // get array of box id's\n  // can't be a winner in less than 5 turns\n  if (gameState.length < 5) return 'No Winner Yet';\n  let p0 = gameState.filter(item => {\n    if (item.player == 0) return item;\n  });\n  p0 = p0.map(item => item.id);\n  let px = gameState.filter(item => {\n    if (item.player == 1) return item;\n  });\n  px = px.map(item => item.id);\n  if (p0 != null && px != null) {\n    var win0 = win.filter(item => {\n      return isSuperset(new Set(p0), new Set(item));\n    });\n    var winX = win.filter(item => {\n      return isSuperset(new Set(px), new Set(item));\n    });\n  }\n  if (win0.length > 0) return 'Player O ';else if (winX.length > 0) return 'Player X ';\n  return 'No Winner Yet';\n};\n// check if subset is in the set\nfunction isSuperset(set, subset) {\n  for (let elem of subset) {\n    if (!set.has(elem)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Export the Game component as default\nexport default Game;\n\n// ========================================\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 144,\n  columnNumber: 17\n}, this), document.getElementById('root'));\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Board\");\n$RefreshReg$(_c2, \"Square\");\n$RefreshReg$(_c3, \"Game\");","map":{"version":3,"names":["React","ReactDOM","jsxDEV","_jsxDEV","Board","_s","player","setPlayer","useState","gameState","setGameState","status","checkForWinner","playerTurn","console","log","takeTurn","id","renderSquare","i","Square","fileName","_jsxFileName","lineNumber","columnNumber","className","children","_c","_s2","mark","tik","setTik","onClick","_c2","Game","_c3","win","length","p0","filter","item","map","px","win0","isSuperset","Set","winX","set","subset","elem","has","render","document","getElementById","$RefreshReg$"],"sources":["/Users/marialee/Desktop/tictactoe/src/tictactoe.jsx"],"sourcesContent":["import React from 'react'; // Import React\nimport ReactDOM from 'react-dom'; // Import ReactDOM\n\nconst Board = () => {\n  // 1st player is X ie 1\n  // State keeps track of next player and gameState\n  const [player, setPlayer] = React.useState(1);\n  const [gameState, setGameState] = React.useState([]);\n  let status = `Winner is ${checkForWinner(gameState)}`;\n\n  // Part 1 step 1 code goes here\n  // Use conditional logic to set a variable to either 'Player O' or  'Player X'\n  let playerTurn = `Next Player: ${player === '0' ? 'Player O' : 'Player X'}`;\n\n  console.log(`We hav a winner ${status}`);\n\n  const takeTurn = (id) => {\n    setGameState([...gameState, { id: id, player: player }]);\n    setPlayer((player + 1) % 2); // get next player\n    return player;\n  };\n  function renderSquare(i) {\n    // use properties to pass callback function takeTurn to Child\n    return <Square takeTurn={takeTurn} id={i}></Square>;\n  }\n\n  return (\n    <div className=\"game-board\">\n      <div className=\"grid-row\">\n        {renderSquare(0)}\n        {renderSquare(1)}\n        {renderSquare(2)}\n      </div>\n      <div className=\"grid-row\">\n        {renderSquare(3)}\n        {renderSquare(4)}\n        {renderSquare(5)}\n      </div>\n      <div className=\"grid-row\">\n        {renderSquare(6)}\n        {renderSquare(7)}\n        {renderSquare(8)}\n      </div>\n      <div id=\"info\">\n        <h1 id=\"turn\">{playerTurn}</h1>\n        <h1>{status}</h1>\n      </div>\n    </div>\n  );\n};\n\nconst Square = ({ takeTurn, id }) => {\n  const mark = ['O', 'X', '+'];\n  const [tik, setTik] = React.useState(2);\n\n  return (\n    <button\n      className={tik === '1' ? 'red' : 'white'}\n      onClick={() => {\n        setTik(takeTurn(id));\n        console.log(`Square: ${id} filled by player : ${tik}`);\n      }}\n    >\n      <h1>{mark[tik]}</h1>\n    </button>\n  );\n};\n\nconst Game = () => {\n  return (\n    <div className=\"game\">\n      <Board></Board>\n    </div>\n  );\n};\n\n\n\n// Checking for Winner takes a bit of work\n// Use JavaScript Sets to check players choices\n// against winning combinations\n// Online there is more compact version but I prefer this one\n\nconst win = [\n  // rows\n  [0, 1, 2],\n  [3, 4, 5],\n  [6, 7, 8],\n  // cols\n  [0, 3, 6],\n  [1, 4, 7],\n  [2, 5, 8],\n  // diagonal\n  [0, 4, 8],\n  [2, 4, 6],\n];\n\n\n\nconst checkForWinner = (gameState) => {\n  // get array of box id's\n  // can't be a winner in less than 5 turns\n  if (gameState.length < 5) return 'No Winner Yet';\n  let p0 = gameState.filter((item) => {\n    if (item.player == 0) return item;\n  });\n  p0 = p0.map((item) => item.id);\n  let px = gameState.filter((item) => {\n    if (item.player == 1) return item;\n  });\n  px = px.map((item) => item.id);\n  if (p0 != null && px != null) {\n    var win0 = win.filter((item) => {\n      return isSuperset(new Set(p0), new Set(item));\n    });\n    var winX = win.filter((item) => {\n      return isSuperset(new Set(px), new Set(item));\n    });\n  }\n  if (win0.length > 0) return 'Player O ';\n  else if (winX.length > 0) return 'Player X ';\n  return 'No Winner Yet';\n};\n// check if subset is in the set\nfunction isSuperset(set, subset) {\n  for (let elem of subset) {\n    if (!set.has(elem)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n\n\n// Export the Game component as default\nexport default Game;\n\n\n\n// ========================================\n\nReactDOM.render(<Game />, document.getElementById('root'));\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}